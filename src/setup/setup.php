<?php
require_once "../admin/config.inc.php";
if(Config::SETUP_DISABLE) exit;
require_once "../layout.inc.php";
require_once "../admin/database.inc.php";
require_once "../admin/credential.inc.php";

Starthtml::show('Website Setup');

?>

<div class="greybox">
    <div class="greyboxbody">
        <h1>Database Setup</h1>
        <form action="setup.php" method="post" id="in_line_position_greyboxbody">
            <input type="hidden" name="setup" value="db_prepare">
            <h3>Prepares the database</h3>
            <input type="submit" style="width: 270px;" value="Create">
        </form>

        <form action="setup.php" method="post" id="in_line_position_greyboxbody">
            <input type="hidden" name="setup" value="db_erase">
            <h3>Deletes the database</h3>
            <input type="submit" style="width: 270px; margin-top: 0px;" value="Delete">
        </form>
    </div>
</div>

<div class="greybox">
    <div class="greyboxbody">
        <h1>Image Setup</h1>

        <form action="setup.php" method="post" id="in_line_position_greyboxbody">
            <input type="hidden" name="setup" value="image_delete_all_files">
            <h3>Delete all image files</h3>
            <input type="submit" style="width: 270px; margin-top: 0px;" value="Delete">
        </form>
    </div>
</div>

<?php

$db_path = Config::DATABASE_PATH;
if(!(file_exists($db_path))) {
    $db_path = $_SERVER["DOCUMENT_ROOT"].Config::DATABASE_PATH;
}
if(isset($_POST['setup'])) {
    echo '<div class="greybox">';
    switch($_POST['setup']) {
        // PREPARE DATABASE
        case 'db_prepare';

            echo '<div class="greyboxbody">';

            // SKIP IF DATABASE EXISTS
            if(file_exists($db_path)) {
                echo '<h2 style="text-align: center;">DATABASE EXISTS</h2>';
                echo '</div>';
                break;
            }
            // CREATE DATABASE
            $output_value = null; // FOR DEBUGGING
            $return_value = null; // FOR DEBUGGING
            exec('touch '.$db_path, $output_value, $return_value);
            if($return_value != 0) {
                die('could not create sqlite database file (maybe permission issues)');
            }
            exec('sqlite3 '.$db_path.' ".read sqlite_prepare.sql" ', $output_value, $return_value);
            if($return_value != 0) {
                die('Check script for errors');
            }
            Credential::change_user('user');
            $str_1 = $_SERVER['SERVER_NAME'];
            $str_2 = $_SERVER['REMOTE_ADDR'];
            $str_3 = $_SERVER['REQUEST_TIME_FLOAT'];
            $md5 = md5($str_1.$str_2.$str_3);
            $pwd_generate = substr($md5, -14);
            Credential::change_pwd($pwd_generate);
            echo '<h2 style="text-align: center;">DATABASE CREATED</h2>';
            echo '<h3 style="text-align: center;">Login with:</h3>';
            echo '<h3 style="text-align: center;">Username: user </h3>';
            echo '<h3 style="text-align: center;">Password: '.$pwd_generate.' </h3>';

            echo '
            <p style="text-align: center;">
            <strong>Important:</strong><br>
                The password is generated by an md5 hash of a some-what pseudorandom seed<br>
                based on values fetched from your global $_SERVER variable.<br>
                It is only meant to be used for your first login.<br>
                Please change the password when you log in for the first time.
            </p>
            ';

            echo '</div>';
            break;
        case 'db_erase';
            echo '    <div class="greyboxbody">';
            unlink($db_path);
            echo '<h2 style="text-align: center;">DATABASE DELETED</h2>';
            echo '</div>';
            break;
        case 'image_delete_all_files';
            echo '    <div class="greyboxbody">';
            foreach(Config::IMAGE_PATHS as $dir) {
                if($dir == Config::IMAGE_PATHS['converted']) {
                    $root_dir = $_SERVER["DOCUMENT_ROOT"].$dir;
                    if(is_dir($root_dir)) {
                        $res_folders = glob($root_dir."*/");
                        foreach($res_folders as $res_folder) {
                            if(file_exists($res_folder)) {
                                $category_folder = glob($res_folder."*/");
                                foreach($category_folder as $category_path) {
                                    if(file_exists($category_path)) {
                                        $contents = scandir($category_path);
                                        foreach($contents as $content) {
                                            if(is_file($category_path.$content)) {
                                                unlink($category_path.$content);
                                                echo 'Deleted:'.$category_path.$content.'<br>';
                                            }
                                        }
                                    }
                                }
                                if(isset($category_path)) {rmdir($category_path);}
                            }
                            if(isset($res_folder)) {rmdir($res_folder);}
                        }
                    }
                }
                else if($dir == Config::IMAGE_PATHS['upload']) {
                    $root_dir = $_SERVER["DOCUMENT_ROOT"].$dir;
                    $category_folder = glob($root_dir."*/");
                    foreach($category_folder as $category_path) {
                        if(file_exists($category_path)) {
                            $contents = scandir($category_path);
                            foreach($contents as $content) {
                                if(is_file($category_path.$content)) {
                                    unlink($category_path.$content);
                                    echo 'Deleted:'.$category_path.$content.'<br>';
                                }
                            }
                        }
                    }
                    if(isset($category_path)) {rmdir($category_path);}
                }
            }
            echo '<h1>All Images Deleted</h1>';
            echo '</div>';

            break;
    }
    echo '</div>';
}


Endhtml::show();
